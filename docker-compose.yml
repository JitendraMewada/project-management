version: "3.8"

services:
  # Web Server (Nginx)
  nginx:
    image: nginx:alpine
    container_name: interior-pms-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - .:/var/www/html
    depends_on:
      - php
    networks:
      - interior-pms-network
    restart: unless-stopped

  # PHP-FPM
  php:
    image: php:8.2-fpm
    container_name: interior-pms-php
    volumes:
      - .:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
      - redis
    networks:
      - interior-pms-network
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_NAME=interior_project_management
      - DB_USER=interior_user
      - DB_PASS=secure_password_123
      - REDIS_HOST=redis

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: interior-pms-mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: root_password_123
      MYSQL_DATABASE: interior_project_management
      MYSQL_USER: interior_user
      MYSQL_PASSWORD: secure_password_123
    networks:
      - interior-pms-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis for Caching
  redis:
    image: redis:alpine
    container_name: interior-pms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - interior-pms-network
    restart: unless-stopped

  # Backup Service
  backup:
    image: alpine:latest
    container_name: interior-pms-backup
    volumes:
      - mysql_data:/data/mysql
      - .:/data/app
      - ./backups:/backups
    depends_on:
      - mysql
    networks:
      - interior-pms-network
    command: /bin/sh -c "
      apk add --no-cache mysql-client &&
      while true; do
      mysqldump -h mysql -u interior_user -psecure_password_123 interior_project_management > /backups/backup_$(date +%Y%m%d_%H%M%S).sql &&
      find /backups -type f -name '*.sql' -mtime +7 -delete &&
      sleep 86400
      done"

volumes:
  mysql_data:
  redis_data:

networks:
  interior-pms-network:
    driver: bridge
